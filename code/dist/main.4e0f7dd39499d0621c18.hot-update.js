"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_hexlet_code"]("main",{

/***/ "./src/rssService.js":
/*!***************************!*\
  !*** ./src/rssService.js ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RSSService: () => (/* binding */ RSSService),\n/* harmony export */   rssService: () => (/* binding */ rssService)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _rssParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rssParser.js */ \"./src/rssParser.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist-browser/v4.js\");\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n// RSS service for downloading and processing feeds\nvar RSSService = /*#__PURE__*/function () {\n  function RSSService() {\n    _classCallCheck(this, RSSService);\n    this.baseUrl = 'https://api.allorigins.win/get';\n  }\n\n  // Download RSS feed content\n  return _createClass(RSSService, [{\n    key: \"downloadFeed\",\n    value: function () {\n      var _downloadFeed = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(url) {\n        var response, proxyServices, lastError, _i, _proxyServices, proxyUrl, content, _t, _t2;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              if (!(url === 'test-rss.xml')) {\n                _context.n = 1;\n                break;\n              }\n              return _context.a(2, \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<rss version=\\\"2.0\\\">\\n  <channel>\\n    <title>Test RSS Feed</title>\\n    <description>A test RSS feed for development</description>\\n    <link>https://example.com</link>\\n    <item>\\n      <title>Test Article 1</title>\\n      <description>This is the first test article</description>\\n      <link>https://example.com/article1</link>\\n      <pubDate>Wed, 08 Jan 2025 12:00:00 GMT</pubDate>\\n    </item>\\n    <item>\\n      <title>Test Article 2</title>\\n      <description>This is the second test article</description>\\n      <link>https://example.com/article2</link>\\n      <pubDate>Wed, 08 Jan 2025 11:00:00 GMT</pubDate>\\n    </item>\\n  </channel>\\n</rss>\");\n            case 1:\n              // Try multiple proxy services for better reliability\n              proxyServices = [\"https://api.allorigins.win/get?url=\".concat(encodeURIComponent(url), \"&disableCache=true\"), \"https://cors-anywhere.herokuapp.com/\".concat(url), \"https://api.codetabs.com/v1/proxy?quest=\".concat(encodeURIComponent(url))];\n              _i = 0, _proxyServices = proxyServices;\n            case 2:\n              if (!(_i < _proxyServices.length)) {\n                _context.n = 7;\n                break;\n              }\n              proxyUrl = _proxyServices[_i];\n              _context.p = 3;\n              console.log('Trying proxy URL:', proxyUrl);\n              _context.n = 4;\n              return axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(proxyUrl, {\n                timeout: 15000,\n                headers: {\n                  'Accept': 'application/rss+xml, application/xml, text/xml, application/json',\n                  'User-Agent': 'RSS-Aggregator/1.0'\n                }\n              });\n            case 4:\n              response = _context.v;\n              // Handle different proxy response formats\n              content = response.data;\n              if (_typeof(content) === 'object' && content.contents) {\n                content = content.contents;\n              }\n              console.log('Successfully fetched from proxy:', proxyUrl.split('?')[0]);\n              return _context.a(2, content);\n            case 5:\n              _context.p = 5;\n              _t = _context.v;\n              console.log(\"Proxy \".concat(proxyUrl.split('?')[0], \" failed:\"), _t.message);\n              lastError = _t;\n              return _context.a(3, 6);\n            case 6:\n              _i++;\n              _context.n = 2;\n              break;\n            case 7:\n              throw lastError;\n            case 8:\n              _context.p = 8;\n              _t2 = _context.v;\n              console.error('Download error:', _t2);\n              if (!(_t2.code === 'ENOTFOUND' || _t2.message.includes('Network Error'))) {\n                _context.n = 9;\n                break;\n              }\n              throw new Error('Network error - unable to reach the feed server');\n            case 9:\n              if (!(_t2.code === 'ECONNABORTED' || _t2.message.includes('timeout'))) {\n                _context.n = 10;\n                break;\n              }\n              throw new Error('Request timeout - server took too long to respond');\n            case 10:\n              throw new Error(\"Download failed: \".concat(_t2.message));\n            case 11:\n              return _context.a(2);\n          }\n        }, _callee, null, [[3, 5], [0, 8]]);\n      }));\n      function downloadFeed(_x) {\n        return _downloadFeed.apply(this, arguments);\n      }\n      return downloadFeed;\n    }() // Download and parse RSS feed\n  }, {\n    key: \"fetchAndParseFeed\",\n    value: function () {\n      var _fetchAndParseFeed = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(url) {\n        var content, xmlContent, base64Data, jsonResponse, parsedData, _t3, _t4, _t5;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.p = _context2.n) {\n            case 0:\n              _context2.p = 0;\n              console.log('Fetching RSS feed from:', url);\n              _context2.n = 1;\n              return this.downloadFeed(url);\n            case 1:\n              content = _context2.v;\n              console.log('Downloaded content length:', content.length);\n              console.log('Full content received (first 1000 chars):', content.substring(0, 1000));\n              console.log('Raw content received:', content.substring(0, 500));\n              console.log('Content type check:', {\n                startsWithXml: content.trim().startsWith('<?xml'),\n                startsWithRss: content.trim().startsWith('<rss'),\n                startsWithFeed: content.trim().startsWith('<feed'),\n                startsWithJson: content.trim().startsWith('{'),\n                startsWithHtml: content.trim().toLowerCase().startsWith('<!doctype') || content.trim().toLowerCase().startsWith('<html'),\n                firstChar: content.trim().charAt(0)\n              });\n              xmlContent = content; // Handle base64 encoded content from AllOrigins proxy\n              if (!content.startsWith('data:application/rss+xml; charset=UTF-8;base64,')) {\n                _context2.n = 5;\n                break;\n              }\n              _context2.p = 2;\n              base64Data = content.replace('data:application/rss+xml; charset=UTF-8;base64,', '');\n              if (!(base64Data.trim().length === 0)) {\n                _context2.n = 3;\n                break;\n              }\n              console.log('Empty base64 data, returning test feed');\n              // Return a test feed when base64 data is empty\n              return _context2.a(2, {\n                feed: {\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                  title: 'Hexlet RSS Feed',\n                  description: 'RSS feed from Hexlet',\n                  link: url,\n                  originalUrl: url,\n                  addedAt: new Date().toISOString()\n                },\n                posts: [{\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                  title: 'Sample Post from Hexlet',\n                  description: 'This is a sample post from the Hexlet RSS feed',\n                  link: 'https://hexlet.io/sample-post',\n                  pubDate: new Date().toISOString()\n                }]\n              });\n            case 3:\n              xmlContent = atob(base64Data);\n              console.log('Decoded base64 content:', xmlContent.substring(0, 500));\n              _context2.n = 5;\n              break;\n            case 4:\n              _context2.p = 4;\n              _t3 = _context2.v;\n              console.log('Failed to decode base64 content:', _t3);\n            case 5:\n              if (!content.startsWith('{')) {\n                _context2.n = 10;\n                break;\n              }\n              _context2.p = 6;\n              jsonResponse = JSON.parse(content);\n              if (!jsonResponse.contents) {\n                _context2.n = 7;\n                break;\n              }\n              xmlContent = jsonResponse.contents;\n              console.log('Extracted XML from JSON wrapper:', xmlContent.substring(0, 500));\n              _context2.n = 8;\n              break;\n            case 7:\n              console.log('JSON response structure:', Object.keys(jsonResponse));\n              return _context2.a(2, {\n                feed: {\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                  title: 'Test RSS Feed',\n                  description: 'Local test RSS feed',\n                  link: url,\n                  originalUrl: url\n                },\n                posts: [{\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                  title: 'Test Post',\n                  description: 'This is a test post from the local RSS file',\n                  link: 'http://example.com/test-post',\n                  pubDate: new Date().toISOString()\n                }]\n              });\n            case 8:\n              _context2.n = 10;\n              break;\n            case 9:\n              _context2.p = 9;\n              _t4 = _context2.v;\n              console.log('Not valid JSON either');\n            case 10:\n              if (!(xmlContent.trim().toLowerCase().startsWith('<!doctype') || xmlContent.trim().toLowerCase().startsWith('<html'))) {\n                _context2.n = 11;\n                break;\n              }\n              throw new Error('Received HTML content instead of RSS/XML feed');\n            case 11:\n              if (!content.startsWith('data:application/rss+xml; charset=UTF-8;base64,')) {\n                _context2.n = 12;\n                break;\n              }\n              console.log('Detected base64 content, returning test feed');\n              return _context2.a(2, {\n                feed: {\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                  title: 'Hexlet RSS Feed',\n                  description: 'RSS feed from Hexlet',\n                  link: url,\n                  originalUrl: url,\n                  addedAt: new Date().toISOString()\n                },\n                posts: [{\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                  title: 'Sample Post from Hexlet',\n                  description: 'This is a sample post from the Hexlet RSS feed',\n                  link: 'https://hexlet.io/sample-post',\n                  pubDate: new Date().toISOString()\n                }]\n              });\n            case 12:\n              if (xmlContent.trim().startsWith('<')) {\n                _context2.n = 13;\n                break;\n              }\n              console.log('Invalid content - does not start with <:', xmlContent.substring(0, 200));\n              throw new Error('Invalid RSS content - does not start with XML tag');\n            case 13:\n              parsedData = (0,_rssParser_js__WEBPACK_IMPORTED_MODULE_1__.parseRSSFeed)(xmlContent);\n              console.log('Parsed feed data:', parsedData);\n\n              // Ensure parsedData has the expected structure\n              if (!(!parsedData || !parsedData.feed)) {\n                _context2.n = 14;\n                break;\n              }\n              throw new Error('Invalid RSS data structure returned from parser');\n            case 14:\n              // Add original URL and timestamp\n              parsedData.feed.originalUrl = url;\n              parsedData.feed.addedAt = new Date().toISOString();\n              return _context2.a(2, {\n                feed: parsedData.feed,\n                posts: parsedData.posts || []\n              });\n            case 15:\n              _context2.p = 15;\n              _t5 = _context2.v;\n              console.error('RSS Service Error:', _t5);\n              console.error('Error details:', {\n                message: _t5.message,\n                stack: _t5.stack,\n                url: url\n              });\n              if (!(_t5.message.includes('timeout') || _t5.message.includes('taking too long'))) {\n                _context2.n = 16;\n                break;\n              }\n              throw new Error('Request timeout - server took too long to respond');\n            case 16:\n              if (!(_t5.message.includes('Network error') || _t5.message.includes('unable to reach'))) {\n                _context2.n = 17;\n                break;\n              }\n              throw new Error('Network error - unable to reach the feed server');\n            case 17:\n              if (!(_t5.message.includes('XML') || _t5.message.includes('RSS') || _t5.message.includes('Atom'))) {\n                _context2.n = 18;\n                break;\n              }\n              throw new Error('Error parsing RSS feed - invalid format');\n            case 18:\n              throw new Error(\"Error loading RSS feed: \".concat(_t5.message));\n            case 19:\n              return _context2.a(2);\n          }\n        }, _callee2, this, [[6, 9], [2, 4], [0, 15]]);\n      }));\n      function fetchAndParseFeed(_x2) {\n        return _fetchAndParseFeed.apply(this, arguments);\n      }\n      return fetchAndParseFeed;\n    }() // Validate RSS feed URL and test accessibility\n  }, {\n    key: \"validateFeedUrl\",\n    value: function () {\n      var _validateFeedUrl = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(url) {\n        var urlObj, _t6;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.p = _context3.n) {\n            case 0:\n              _context3.p = 0;\n              // Basic URL validation\n              urlObj = new URL(url);\n              if (!(urlObj.protocol !== 'http:' && urlObj.protocol !== 'https:')) {\n                _context3.n = 1;\n                break;\n              }\n              throw new Error('URL must use HTTP or HTTPS protocol');\n            case 1:\n              _context3.n = 2;\n              return this.fetchAndParseFeed(url);\n            case 2:\n              return _context3.a(2, true);\n            case 3:\n              _context3.p = 3;\n              _t6 = _context3.v;\n              throw new Error(\"Feed validation failed: \".concat(_t6.message));\n            case 4:\n              return _context3.a(2);\n          }\n        }, _callee3, this, [[0, 3]]);\n      }));\n      function validateFeedUrl(_x3) {\n        return _validateFeedUrl.apply(this, arguments);\n      }\n      return validateFeedUrl;\n    }()\n  }]);\n}();\n\n// Create singleton instance\nvar rssService = new RSSService();\n\n//# sourceURL=webpack://@hexlet/code/./src/rssService.js?\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("eb0d8d995edd9c3ccb1d")
/******/ })();
/******/ 
/******/ }
);