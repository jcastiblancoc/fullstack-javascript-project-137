"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_hexlet_code"]("main",{

/***/ "./src/view.js":
/*!*********************!*\
  !*** ./src/view.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWatchedState: () => (/* binding */ createWatchedState),\n/* harmony export */   displayFeed: () => (/* binding */ displayFeed),\n/* harmony export */   initElements: () => (/* binding */ initElements),\n/* harmony export */   showError: () => (/* binding */ showError),\n/* harmony export */   showSuccess: () => (/* binding */ showSuccess)\n/* harmony export */ });\n/* harmony import */ var on_change__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! on-change */ \"./node_modules/on-change/index.js\");\n/* harmony import */ var _i18n_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./i18n.js */ \"./src/i18n.js\");\n/* harmony import */ var _dataStore_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataStore.js */ \"./src/dataStore.js\");\n\n\n\n\n// DOM elements\nvar elements = {};\n\n// Initialize DOM elements\nvar initElements = function initElements() {\n  elements = {\n    form: document.getElementById('rss-form'),\n    urlInput: document.getElementById('rss-url'),\n    submitButton: document.querySelector('button[type=\"submit\"]'),\n    feedsContainer: document.querySelector('.feeds')\n  };\n};\n\n// Update form validation display\nvar updateFormValidation = function updateFormValidation(state) {\n  var _elements = elements,\n    urlInput = _elements.urlInput;\n  if (!urlInput) return;\n\n  // Clear previous validation classes\n  urlInput.classList.remove('is-valid', 'is-invalid');\n\n  // Hide feedback initially\n  var feedback = urlInput.parentElement.querySelector('.invalid-feedback');\n  if (feedback) {\n    feedback.style.display = 'none';\n    feedback.textContent = '';\n    feedback.classList.remove('d-block');\n  }\n  if (state.form.isValid && urlInput.value.trim()) {\n    if (state.form.errors.length === 0) {\n      urlInput.classList.add('is-valid');\n    }\n  } else if (state.form.errors.length > 0) {\n    urlInput.classList.remove('is-valid');\n    urlInput.classList.add('is-invalid');\n    var _feedback = urlInput.parentElement.querySelector('.invalid-feedback');\n    if (_feedback) {\n      _feedback.textContent = state.form.errors[0];\n      _feedback.style.display = 'block';\n      _feedback.classList.add('d-block');\n    }\n  }\n};\n\n// Update submit button state\nvar updateSubmitButton = function updateSubmitButton(isSubmitting) {\n  var _elements2 = elements,\n    submitButton = _elements2.submitButton;\n  if (!submitButton) return;\n  if (isSubmitting) {\n    submitButton.disabled = true;\n    submitButton.textContent = (0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.form.processing');\n  } else {\n    submitButton.disabled = false;\n    submitButton.textContent = (0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.form.submitButton');\n  }\n};\nvar renderAlert = function renderAlert(type, message) {\n  var feedsContainer = document.querySelector('.feeds');\n  if (!feedsContainer) {\n    console.log('No feeds container found for alert');\n    return;\n  }\n  var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';\n  var alertElement = document.createElement('div');\n  alertElement.className = \"alert \".concat(alertClass, \" alert-dismissible fade show\");\n  alertElement.style.display = 'block';\n  alertElement.innerHTML = \"\\n    \".concat(message, \"\\n    <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"></button>\\n  \");\n\n  // Remove any existing alerts\n  var existingAlerts = feedsContainer.querySelectorAll('.alert');\n  existingAlerts.forEach(function (alert) {\n    return alert.remove();\n  });\n\n  // Insert alert at the beginning of feeds container\n  feedsContainer.insertBefore(alertElement, feedsContainer.firstChild);\n\n  // Force reflow for Firefox\n  alertElement.offsetHeight;\n  console.log('Alert rendered:', type, message, alertElement);\n\n  // Auto-dismiss after 5 seconds\n  setTimeout(function () {\n    if (alertElement.parentNode) {\n      alertElement.remove();\n    }\n  }, 5000);\n};\nvar renderFeed = function renderFeed(feedData) {\n  var postsData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var feedsContainer = document.querySelector('.feeds');\n  if (!feedsContainer) return;\n  var addedDate = new Date(feedData.addedAt).toLocaleString();\n  var lastUpdated = feedData.lastBuildDate ? new Date(feedData.lastBuildDate).toLocaleString() : addedDate;\n  var feedElement = document.createElement('div');\n  feedElement.className = 'card mb-4';\n  feedElement.setAttribute('data-feed-id', feedData.id);\n  feedElement.innerHTML = \"\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">\".concat(feedData.title, \"</h5>\\n      <p class=\\\"card-text text-muted\\\">\").concat(feedData.description, \"</p>\\n      <div class=\\\"mb-2\\\">\\n        <small class=\\\"text-muted\\\">\").concat((0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.feed.url', {\n    url: feedData.originalUrl\n  }), \"</small><br>\\n        <small class=\\\"text-muted\\\">\").concat((0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.feed.added', {\n    date: addedDate\n  }), \"</small><br>\\n        \").concat(feedData.lastBuildDate ? \"<small class=\\\"text-muted\\\">\".concat((0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.feed.lastUpdated', {\n    date: lastUpdated\n  }), \"</small>\") : '', \"\\n      </div>\\n      <div class=\\\"mb-3\\\">\\n        <span class=\\\"badge bg-success me-2\\\">\").concat((0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.feed.status'), \"</span>\\n        <span class=\\\"badge bg-info\\\">\").concat((0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.feed.posts', {\n    count: postsData.length\n  }), \"</span>\\n      </div>\\n      <div class=\\\"posts-section\\\">\\n        <h6 class=\\\"mb-3\\\">\").concat((0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.posts.title'), \"</h6>\\n        <div class=\\\"posts-list\\\" id=\\\"posts-\").concat(feedData.id, \"\\\">\\n          \").concat(renderPosts(postsData), \"\\n        </div>\\n      </div>\\n    </div>\\n  \");\n  feedsContainer.appendChild(feedElement);\n};\nvar renderPosts = function renderPosts(posts) {\n  if (!posts || posts.length === 0) {\n    return '<p class=\"text-muted\">No posts available</p>';\n  }\n  return posts.map(function (post) {\n    var publishDate = post.pubDate ? new Date(post.pubDate).toLocaleDateString() : '';\n    var author = post.author ? \" - \".concat(post.author) : '';\n    var isRead = _dataStore_js__WEBPACK_IMPORTED_MODULE_2__.dataStore.isPostRead(post.id);\n    var titleClass = isRead ? 'fw-normal' : 'fw-bold';\n    return \"\\n      <div class=\\\"post-item mb-3 p-3 border rounded\\\">\\n        <div class=\\\"d-flex justify-content-between align-items-start\\\">\\n          <div class=\\\"flex-grow-1\\\">\\n            <h6 class=\\\"post-title \".concat(titleClass, \"\\\">\\n              <a href=\\\"\").concat(post.link, \"\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" class=\\\"text-decoration-none\\\">\\n                \").concat(post.title, \"\\n              </a>\\n            </h6>\\n            \").concat(post.description ? \"<p class=\\\"post-description text-muted small\\\">\".concat(post.description.slice(0, 200)).concat(post.description.length > 200 ? '...' : '', \"</p>\") : '', \"\\n            <div class=\\\"post-meta\\\">\\n              <small class=\\\"text-muted\\\">\\n                \").concat(publishDate ? (0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.posts.publishedOn', {\n      date: publishDate\n    }) : '').concat(author, \"\\n              </small>\\n            </div>\\n          </div>\\n          <div class=\\\"ms-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-info btn-sm preview-btn\\\" \\n                    data-post-id=\\\"\").concat(post.id, \"\\\" \\n                    data-bs-toggle=\\\"modal\\\" \\n                    data-bs-target=\\\"#postPreviewModal\\\">\\n              <i class=\\\"bi bi-eye\\\"></i> \").concat((0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.posts.preview'), \"\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n  }).join('');\n};\n\n// Create watched state\nvar createWatchedState = function createWatchedState() {\n  var state = {\n    form: {\n      isValid: true,\n      errors: [],\n      isSubmitting: false\n    }\n  };\n  return (0,on_change__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(state, function (path, value) {\n    console.log('State changed:', path, value);\n\n    // Handle form validation state changes\n    if (path === 'form.isValid' || path === 'form.errors') {\n      updateFormValidation(state);\n    }\n\n    // Handle form submission state\n    if (path === 'form.isSubmitting') {\n      updateSubmitButton(value);\n    }\n  });\n};\n\n// Utility functions for the view\nvar showError = function showError(message) {\n  renderAlert('error', message);\n};\nvar showSuccess = function showSuccess(message) {\n  renderAlert('success', message);\n};\nvar displayFeed = function displayFeed(feedData, postsData) {\n  renderFeed(feedData, postsData);\n  setupPostPreviewHandlers();\n};\n\n// Setup post preview modal handlers\nvar setupPostPreviewHandlers = function setupPostPreviewHandlers() {\n  // Remove existing listeners to avoid duplicates\n  document.querySelectorAll('.preview-btn').forEach(function (btn) {\n    btn.removeEventListener('click', handlePreviewClick);\n    btn.addEventListener('click', handlePreviewClick);\n  });\n};\n\n// Handle preview button click\nvar handlePreviewClick = function handlePreviewClick(event) {\n  var postId = event.currentTarget.dataset.postId;\n  var post = _dataStore_js__WEBPACK_IMPORTED_MODULE_2__.dataStore.posts.get(postId);\n  if (!post) {\n    console.error('Post not found:', postId);\n    return;\n  }\n\n  // Mark post as read\n  _dataStore_js__WEBPACK_IMPORTED_MODULE_2__.dataStore.markPostAsRead(postId);\n\n  // Update the post title styling\n  var postElement = event.currentTarget.closest('.post-item');\n  var titleElement = postElement.querySelector('.post-title');\n  titleElement.classList.remove('fw-bold');\n  titleElement.classList.add('fw-normal');\n\n  // Populate modal with post data\n  populatePreviewModal(post);\n};\n\n// Populate the preview modal with post data\nvar populatePreviewModal = function populatePreviewModal(post) {\n  var modal = document.getElementById('postPreviewModal');\n  var modalTitle = document.getElementById('postPreviewModalLabel');\n  var postTitle = document.getElementById('modal-post-title');\n  var postDescription = document.getElementById('modal-post-description');\n  var postDate = document.getElementById('modal-post-date');\n  var postLink = document.getElementById('modal-post-link');\n  if (modalTitle) modalTitle.textContent = (0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.posts.previewTitle');\n  if (postTitle) postTitle.textContent = post.title || 'No title';\n  if (postDescription) {\n    postDescription.innerHTML = post.description || '<em>No description available</em>';\n  }\n  if (postDate && post.pubDate) {\n    var formattedDate = new Date(post.pubDate).toLocaleDateString();\n    postDate.textContent = (0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.posts.publishedOn', {\n      date: formattedDate\n    });\n  }\n  if (postLink) {\n    postLink.href = post.link || '#';\n    postLink.textContent = (0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.posts.readFullArticle');\n  }\n\n  // Update modal footer button text\n  var closeButton = modal.querySelector('.modal-footer .btn-secondary');\n  if (closeButton) closeButton.textContent = (0,_i18n_js__WEBPACK_IMPORTED_MODULE_1__.t)('app.posts.close');\n};\n\n//# sourceURL=webpack://@hexlet/code/./src/view.js?\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("1591106654bc2877b353")
/******/ })();
/******/ 
/******/ }
);